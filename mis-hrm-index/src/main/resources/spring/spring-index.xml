<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/aop
         http://www.springframework.org/schema/aop/spring-aop.xsd
         http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.alibaba.com/schema/stat http://www.alibaba.com/schema/stat.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <context:component-scan base-package="com.mis.hrm.index.*"/>
    <!--仅会查找在同一个Application中的bean注解-->
    <context:annotation-config/>
    <mvc:annotation-driven/>

    <bean name="datasource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/hrms?useUnicode=true&amp;characterEncoding=utf-8&amp;allowMultiQueries=true&amp;serverTimezone=UTC"/>
        <property name="user" value="root"/>
        <property name="password" value="..box123456"/>
        <property name="driverClass" value="com.mysql.jdbc.Driver"/>
        <!--初始化连接池大小-->
        <property name="initialPoolSize" value="5"/>
        <property name="acquireIncrement" value="5"/>
        <property name="minPoolSize" value="1"/>
        <property name="maxPoolSize" value="20"/>
    </bean>

    <bean name="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="datasource"/>
        <!--迭代查找指定路径下的mapper文件，-->
        <property name="mapperLocations" value="classpath*:mapper/*.xml"/>
        <property name="configurationProperties">
            <props>
                <!--缓存机制-->
                <prop key="cacheEnable">true</prop>
                <!--在变量为null的时候也调用setter方法-->
                <prop key="callSetterOnNulls">true</prop>
            </props>
        </property>
    </bean>

    <bean name="daoManager" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--这项在这个项目中其实可以不写，因为MapperScannerConfigurer将会自动创建MapperFactoryBean之后自动装配，但是你
        如果使用了一个以上的DateSource就会装配失败， 就要以下面的方式指定sqlSessionFactory-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <property name="basePackage" value="com.path.dao"/>
    </bean>

    <bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="datasource"/>
    </bean>

    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="maxUploadSize" value="10485760000"/>
        <property name="maxInMemorySize" value="40960000"/>
    </bean>


    <bean id="indexLog" class="com.mis.hrm.index.interceptor.LogInterceptor">
        <constructor-arg type="java.lang.String" value="index"/>
        <constructor-arg type="java.lang.String" value=""/>
    </bean>

    <aop:config>
        <aop:aspect id="logMonitor" ref="indexLog" order="1">
            <aop:pointcut id="indexLogAround"
                          expression="(execution(* com.mis.hrm.index.*.*.*(..)))"/>
            <aop:around pointcut-ref="indexLogAround" method="around"/>
        </aop:aspect>
    </aop:config>


</beans>
