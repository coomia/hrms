<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context-4.0.xsd
         http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--<context:component-scan base-package="com.mis.hrm.book.*"/>-->
    <!--&lt;!&ndash;静态配置替换&ndash;&gt;-->
    <!--<context:property-placeholder location="classpath:spring/jdbc.properties" ignore-unresolvable="true"/>-->
    <!--&lt;!&ndash;配置数据源&ndash;&gt;-->
    <!--<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">-->
        <!--<property name="driverClassName" value="${jdbc.driverClass}"/>-->
        <!--<property name="url" value="${jdbc.url}"/>-->
        <!--<property name="username" value="${jdbc.username}"/>-->
        <!--<property name="password" value="${jdbc.password}"/>-->
        <!--&lt;!&ndash; 连接池初始连接数 &ndash;&gt;-->
        <!--<property name="initialSize" value="3"/>-->
        <!--&lt;!&ndash; 允许的最大同时使用中(在被业务线程持有，还没有归还给druid) 的连接数 &ndash;&gt;-->
        <!--<property name="maxActive" value="30"/>-->
        <!--&lt;!&ndash; 允许的最小空闲连接数，空闲连接超时踢除过程会最少保留的连接数 &ndash;&gt;-->
        <!--<property name="minIdle" value="3"/>-->
        <!--&lt;!&ndash; 从连接池获取连接的最大等待时间 5 秒&ndash;&gt;-->
        <!--<property name="maxWait" value="5000"/>-->
        <!--&lt;!&ndash; 强行关闭从连接池获取而长时间未归还给druid的连接(认为异常连接）&ndash;&gt;-->
        <!--<property name="removeAbandoned" value="true"/>-->
        <!--&lt;!&ndash; 异常连接判断条件，超过180 秒 则认为是异常的，需要强行关闭 &ndash;&gt;-->
        <!--<property name="removeAbandonedTimeout" value="180"/>-->
        <!--&lt;!&ndash; 从连接池获取到连接后，如果超过被空闲剔除周期，是否做一次连接有效性检查 &ndash;&gt;-->
        <!--<property name="testWhileIdle" value="true"/>-->
        <!--&lt;!&ndash; 从连接池获取连接后，是否马上执行一次检查 &ndash;&gt;-->
        <!--<property name="testOnBorrow" value="false"/>-->
        <!--&lt;!&ndash; 归还连接到连接池时是否马上做一次检查 &ndash;&gt;-->
        <!--<property name="testOnReturn" value="false"/>-->
        <!--&lt;!&ndash; 连接有效性检查的SQL &ndash;&gt;-->
        <!--<property name="validationQuery" value="SELECT 1"/>-->
        <!--&lt;!&ndash; 连接有效性检查的超时时间 1 秒 &ndash;&gt;-->
        <!--<property name="validationQueryTimeout" value="2"/>-->

        <!--&lt;!&ndash; 周期性剔除长时间呆在池子里未被使用的空闲连接, 10秒一次&ndash;&gt;-->
        <!--<property name="timeBetweenEvictionRunsMillis" value="10000"/>-->
        <!--&lt;!&ndash; 空闲多久可以认为是空闲太长而需要剔除 30 秒&ndash;&gt;-->
        <!--<property name="minEvictableIdleTimeMillis" value="30000"/>-->

        <!--&lt;!&ndash; 是否缓存prepareStatement,也就是PSCache,MySQL建议关闭 &ndash;&gt;-->
        <!--<property name="poolPreparedStatements" value="false"/>-->
        <!--<property name="maxOpenPreparedStatements" value="-1"/>-->

        <!--&lt;!&ndash; 是否设置自动提交，相当于每个语句一个事务 &ndash;&gt;-->
        <!--<property name="defaultAutoCommit" value="true"/>-->
        <!--&lt;!&ndash; 记录被判定为异常的连接 &ndash;&gt;-->
        <!--<property name="logAbandoned" value="true"/>-->
        <!--&lt;!&ndash; 网络读取超时，网络连接超时 &ndash;&gt;-->
        <!--<property name="connectionProperties" value="connectTimeout=1000;socketTimeout=3000"/>-->
    <!--</bean>-->
    <!--&lt;!&ndash;映射xml文件的位置&ndash;&gt;-->
    <!--<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">-->
        <!--<property name="dataSource" ref="dataSource"/>-->
        <!--<property name="configLocation" value="classpath:mybatis/MapperConfig.xml"/>-->
        <!--<property name="mapperLocations" value="classpath:mappers/*Mapper.xml"/>-->
    <!--</bean>-->

    <!--<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">-->
        <!--<property name="basePackage" value="com.mis.hrm.book.dao"/>-->
        <!--&lt;!&ndash;指定使用哪一个selsessionfactory&ndash;&gt;-->
        <!--<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>-->
    <!--</bean>-->



    <bean id="bookLog" class="com.mis.hrm.book.interceptor.LogInterceptor">
        <constructor-arg type="java.lang.String" value="book"/>
        <constructor-arg type="java.lang.String" value=""/>
    </bean>

    <aop:config>
        <aop:aspect id="logMonitor" ref="bookLog" order="1">
            <aop:pointcut id="bookLogAround"
                          expression="(execution(* com.mis.hrm.book.*.*.*(..)))"/>
            <aop:around pointcut-ref="bookLogAround" method="around"/>
        </aop:aspect>
    </aop:config>
</beans>